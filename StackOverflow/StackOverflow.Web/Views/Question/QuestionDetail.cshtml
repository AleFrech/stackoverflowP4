@using StackOverflow.Web.Controllers
@model StackOverflow.Web.Controllers.QuestionDetailModel
<link rel="stylesheet" type="text/css" href="/Scripts/mdd_styles.css" />
<script type="text/javascript" src="/Scripts/jQuery-2.1.3.min.js"></script>
<script type="text/javascript" src="/Scripts/MarkdownDeepLib.min.js"></script>


    <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.1.0/css/font-awesome.min.css" />
    <div class="container">
        <div class="well">
            <div class="media">
                <div class="media-body">     
                    <div style="word-wrap: break-word;">
                        <h4 class="media-heading">@Html.DisplayFor(model => model.Title)</h4>
                    </div>
                    <p class="text-right">By @if (Model.Owner.Id.Equals(ViewData["logUser"]))
                                             {
                                                 @Html.ActionLink(Model.Owner.Name + " " + Model.Owner.LastName, "UserProfile", "Account", new {id = Model.Owner.Id}, null)
                                             }
                                             else
                                             {
                                                 @Html.ActionLink(Model.Owner.Name + " " + Model.Owner.LastName, "Profile", "Account", new {id = Model.Owner.Id}, null)
                                             }</p>
                    <p>
                        <div style="word-wrap: break-word;">
                            @Html.DisplayFor(model => model.Decription)
                        </div>
                    </p>
                    <ul class="list-inline list-unstyled">
                        <li><span><strong>Views: </strong> @Html.DisplayFor(model => model.Views) </span></li>
                        <li>|</li>
                        <li><span><strong>Answers: </strong> @Html.DisplayFor(model => model.Answers) </span></li>
                        <li>|</li>
                        <li><span><strong>Votes: </strong> @Html.DisplayFor(model => model.Votes) </span></li>
                        
                            <a href="@Url.Action("UpVote", "Question", new {ID = Model.QuestionId})">

                                <img src="http://www.clker.com/cliparts/z/z/h/C/V/5/up-white-arrow-hi.png" style="height: 32px; width: 32px">
                            </a>
                            <a href="@Url.Action("DownVote", "Question", new {ID = Model.QuestionId})">

                                <img src="http://i.imgur.com/c345P37.png?1" style="height: 32px; width: 32px;">
                            </a>
                       
                    </ul>
                </div>
            </div>
        </div>
        @Html.ActionLink("Back to Questions", "Index") | @Html.ActionLink("Delete Question", "DeleteQuestion", new { ID = Model.QuestionId }, null)
    </div>

@{ Html.RenderAction("CommentIndex", "Comment", new { Fid = Model.QuestionId });}
<div class="row">

    @if (Context.User.Identity.IsAuthenticated)
    {
        using (Html.BeginForm("CreateComment", "Comment", new {Fid = Model.QuestionId.ToString()}))
        {
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                <div class="form-group">
                    @Html.LabelFor(model => model.CreateComment, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.CreateComment, new {htmlAttributes = new {@class = "form-control"}, style = "width:500px; height:40px;"})
                        @Html.ValidationMessageFor(model => model.CreateComment, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default"/>
                    </div>
                </div>
            </div>
        }
    }
</div>
<hr/>

<div class="row">
    @{ Html.RenderAction("AnswerIndex", "Answer", new {qID = Model.QuestionId});}
</div>

<hr/>
<div class="row">

    @if (Context.User.Identity.IsAuthenticated)
    {
        using (Html.BeginForm("CreateAnswer", "Answer",new{qID=Model.QuestionId.ToString()}))
        {
              <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                  <div class="form-group">
                      @Html.LabelFor(model => model.CreateAnswer, htmlAttributes: new {@class = "control-label col-md-2"})
                      <div class="col-md-10">
                          <div class="mdd_toolbar"></div>
                          @Html.TextAreaFor(model => model.CreateAnswer,  new { @class = "mdd_editor",style="width:500px; height:100px;" })@if (TempData["AnswerBelow5word"] != null)
                                                                                                                                                                    {
                                                                                                                                                                        @Html.Label("*" + TempData["AnswerBelow5word"].ToString(), htmlAttributes: new {style = "color: red"})
                                                                                                                                                                    }

                          <div class="mdd_resizer"></div>
                      </div>
                  </div>
                  <script>
                      $("textarea.mdd_editor").MarkdownDeep({
                          help_location: "/Scripts/mdd_help.html",
                          ExtraMode: true, disableTabHandling: true

                      });
                  </script>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    }
</div>

